/*
 * This file is generated by jOOQ.
 */
package src.main.java.com.jnutz.jooq.public_.tables.records;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;
import src.main.java.com.jnutz.jooq.public_.tables.Items;

import javax.annotation.processing.Generated;
import java.math.BigDecimal;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.3"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ItemsRecord extends UpdatableRecordImpl<ItemsRecord> implements Record6<Short, String, String, BigDecimal, Short, String>
{
    
    private static final long serialVersionUID = 1472615602;
    
    /**
     * Setter for <code>PUBLIC.Items.Id</code>.
     */
    public void setId(Short value)
    {
        set(0, value);
    }
    
    /**
     * Getter for <code>PUBLIC.Items.Id</code>.
     */
    public Short getId()
    {
        return (Short) get(0);
    }
    
    /**
     * Setter for <code>PUBLIC.Items.Name</code>.
     */
    public void setName(String value)
    {
        set(1, value);
    }
    
    /**
     * Getter for <code>PUBLIC.Items.Name</code>.
     */
    public String getName()
    {
        return (String) get(1);
    }
    
    /**
     * Setter for <code>PUBLIC.Items.Group</code>.
     */
    public void setGroup(String value)
    {
        set(2, value);
    }
    
    /**
     * Getter for <code>PUBLIC.Items.Group</code>.
     */
    public String getGroup()
    {
        return (String) get(2);
    }
    
    /**
     * Setter for <code>PUBLIC.Items.Price</code>.
     */
    public void setPrice(BigDecimal value)
    {
        set(3, value);
    }
    
    /**
     * Getter for <code>PUBLIC.Items.Price</code>.
     */
    public BigDecimal getPrice()
    {
        return (BigDecimal) get(3);
    }
    
    /**
     * Setter for <code>PUBLIC.Items.AvailableAmount</code>.
     */
    public void setAvailableamount(Short value)
    {
        set(4, value);
    }
    
    /**
     * Getter for <code>PUBLIC.Items.AvailableAmount</code>.
     */
    public Short getAvailableamount()
    {
        return (Short) get(4);
    }
    
    /**
     * Setter for <code>PUBLIC.Items.Measurement</code>.
     */
    public void setMeasurement(String value)
    {
        set(5, value);
    }
    
    /**
     * Getter for <code>PUBLIC.Items.Measurement</code>.
     */
    public String getMeasurement()
    {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------
    
    @Override
    public Record1<Short> key()
    {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------
    
    @Override
    public Row6<Short, String, String, BigDecimal, Short, String> fieldsRow()
    {
        return (Row6) super.fieldsRow();
    }
    
    @Override
    public Row6<Short, String, String, BigDecimal, Short, String> valuesRow()
    {
        return (Row6) super.valuesRow();
    }
    
    @Override
    public Field<Short> field1()
    {
        return Items.ITEMS.ID;
    }
    
    @Override
    public Field<String> field2()
    {
        return Items.ITEMS.NAME;
    }
    
    @Override
    public Field<String> field3()
    {
        return Items.ITEMS.GROUP;
    }
    
    @Override
    public Field<BigDecimal> field4()
    {
        return Items.ITEMS.PRICE;
    }
    
    @Override
    public Field<Short> field5()
    {
        return Items.ITEMS.AVAILABLEAMOUNT;
    }
    
    @Override
    public Field<String> field6()
    {
        return Items.ITEMS.MEASUREMENT;
    }
    
    @Override
    public Short component1()
    {
        return getId();
    }
    
    @Override
    public String component2()
    {
        return getName();
    }
    
    @Override
    public String component3()
    {
        return getGroup();
    }
    
    @Override
    public BigDecimal component4()
    {
        return getPrice();
    }
    
    @Override
    public Short component5()
    {
        return getAvailableamount();
    }
    
    @Override
    public String component6()
    {
        return getMeasurement();
    }
    
    @Override
    public Short value1()
    {
        return getId();
    }
    
    @Override
    public String value2()
    {
        return getName();
    }
    
    @Override
    public String value3()
    {
        return getGroup();
    }
    
    @Override
    public BigDecimal value4()
    {
        return getPrice();
    }
    
    @Override
    public Short value5()
    {
        return getAvailableamount();
    }
    
    @Override
    public String value6()
    {
        return getMeasurement();
    }
    
    @Override
    public ItemsRecord value1(Short value)
    {
        setId(value);
        return this;
    }
    
    @Override
    public ItemsRecord value2(String value)
    {
        setName(value);
        return this;
    }
    
    @Override
    public ItemsRecord value3(String value)
    {
        setGroup(value);
        return this;
    }
    
    @Override
    public ItemsRecord value4(BigDecimal value)
    {
        setPrice(value);
        return this;
    }
    
    @Override
    public ItemsRecord value5(Short value)
    {
        setAvailableamount(value);
        return this;
    }
    
    @Override
    public ItemsRecord value6(String value)
    {
        setMeasurement(value);
        return this;
    }
    
    @Override
    public ItemsRecord values(Short value1, String value2, String value3, BigDecimal value4, Short value5, String value6)
    {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }
    
    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------
    
    /**
     * Create a detached ItemsRecord
     */
    public ItemsRecord()
    {
        super(Items.ITEMS);
    }
    
    /**
     * Create a detached, initialised ItemsRecord
     */
    public ItemsRecord(Short id, String name, String group, BigDecimal price, Short availableamount, String measurement)
    {
        super(Items.ITEMS);
        
        set(0, id);
        set(1, name);
        set(2, group);
        set(3, price);
        set(4, availableamount);
        set(5, measurement);
    }
}
