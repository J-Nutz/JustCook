/*
 * This file is generated by jOOQ.
 */
package src.main.java.com.jnutz.jooq.public_.tables.records;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;
import src.main.java.com.jnutz.jooq.public_.tables.Employees;

import javax.annotation.processing.Generated;
import java.sql.Date;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.3"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class EmployeesRecord extends UpdatableRecordImpl<EmployeesRecord> implements Record6<Short, String, String, Byte, Date, String>
{
    
    private static final long serialVersionUID = -302889139;
    
    /**
     * Setter for <code>PUBLIC.Employees.UserId</code>.
     */
    public void setUserid(Short value)
    {
        set(0, value);
    }
    
    /**
     * Getter for <code>PUBLIC.Employees.UserId</code>.
     */
    public Short getUserid()
    {
        return (Short) get(0);
    }
    
    /**
     * Setter for <code>PUBLIC.Employees.FirstName</code>.
     */
    public void setFirstname(String value)
    {
        set(1, value);
    }
    
    /**
     * Getter for <code>PUBLIC.Employees.FirstName</code>.
     */
    public String getFirstname()
    {
        return (String) get(1);
    }
    
    /**
     * Setter for <code>PUBLIC.Employees.LastName</code>.
     */
    public void setLastname(String value)
    {
        set(2, value);
    }
    
    /**
     * Getter for <code>PUBLIC.Employees.LastName</code>.
     */
    public String getLastname()
    {
        return (String) get(2);
    }
    
    /**
     * Setter for <code>PUBLIC.Employees.Age</code>.
     */
    public void setAge(Byte value)
    {
        set(3, value);
    }
    
    /**
     * Getter for <code>PUBLIC.Employees.Age</code>.
     */
    public Byte getAge()
    {
        return (Byte) get(3);
    }
    
    /**
     * Setter for <code>PUBLIC.Employees.DateOfBirth</code>.
     */
    public void setDateofbirth(Date value)
    {
        set(4, value);
    }
    
    /**
     * Getter for <code>PUBLIC.Employees.DateOfBirth</code>.
     */
    public Date getDateofbirth()
    {
        return (Date) get(4);
    }
    
    /**
     * Setter for <code>PUBLIC.Employees.Email</code>.
     */
    public void setEmail(String value)
    {
        set(5, value);
    }
    
    /**
     * Getter for <code>PUBLIC.Employees.Email</code>.
     */
    public String getEmail()
    {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------
    
    @Override
    public Record1<Short> key()
    {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------
    
    @Override
    public Row6<Short, String, String, Byte, Date, String> fieldsRow()
    {
        return (Row6) super.fieldsRow();
    }
    
    @Override
    public Row6<Short, String, String, Byte, Date, String> valuesRow()
    {
        return (Row6) super.valuesRow();
    }
    
    @Override
    public Field<Short> field1()
    {
        return Employees.EMPLOYEES.USERID;
    }
    
    @Override
    public Field<String> field2()
    {
        return Employees.EMPLOYEES.FIRSTNAME;
    }
    
    @Override
    public Field<String> field3()
    {
        return Employees.EMPLOYEES.LASTNAME;
    }
    
    @Override
    public Field<Byte> field4()
    {
        return Employees.EMPLOYEES.AGE;
    }
    
    @Override
    public Field<Date> field5()
    {
        return Employees.EMPLOYEES.DATEOFBIRTH;
    }
    
    @Override
    public Field<String> field6()
    {
        return Employees.EMPLOYEES.EMAIL;
    }
    
    @Override
    public Short component1()
    {
        return getUserid();
    }
    
    @Override
    public String component2()
    {
        return getFirstname();
    }
    
    @Override
    public String component3()
    {
        return getLastname();
    }
    
    @Override
    public Byte component4()
    {
        return getAge();
    }
    
    @Override
    public Date component5()
    {
        return getDateofbirth();
    }
    
    @Override
    public String component6()
    {
        return getEmail();
    }
    
    @Override
    public Short value1()
    {
        return getUserid();
    }
    
    @Override
    public String value2()
    {
        return getFirstname();
    }
    
    @Override
    public String value3()
    {
        return getLastname();
    }
    
    @Override
    public Byte value4()
    {
        return getAge();
    }
    
    @Override
    public Date value5()
    {
        return getDateofbirth();
    }
    
    @Override
    public String value6()
    {
        return getEmail();
    }
    
    @Override
    public EmployeesRecord value1(Short value)
    {
        setUserid(value);
        return this;
    }
    
    @Override
    public EmployeesRecord value2(String value)
    {
        setFirstname(value);
        return this;
    }
    
    @Override
    public EmployeesRecord value3(String value)
    {
        setLastname(value);
        return this;
    }
    
    @Override
    public EmployeesRecord value4(Byte value)
    {
        setAge(value);
        return this;
    }
    
    @Override
    public EmployeesRecord value5(Date value)
    {
        setDateofbirth(value);
        return this;
    }
    
    @Override
    public EmployeesRecord value6(String value)
    {
        setEmail(value);
        return this;
    }
    
    @Override
    public EmployeesRecord values(Short value1, String value2, String value3, Byte value4, Date value5, String value6)
    {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }
    
    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------
    
    /**
     * Create a detached EmployeesRecord
     */
    public EmployeesRecord()
    {
        super(Employees.EMPLOYEES);
    }
    
    /**
     * Create a detached, initialised EmployeesRecord
     */
    public EmployeesRecord(Short userid, String firstname, String lastname, Byte age, Date dateofbirth, String email)
    {
        super(Employees.EMPLOYEES);
        
        set(0, userid);
        set(1, firstname);
        set(2, lastname);
        set(3, age);
        set(4, dateofbirth);
        set(5, email);
    }
}
