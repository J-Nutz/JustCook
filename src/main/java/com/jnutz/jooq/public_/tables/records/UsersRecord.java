/*
 * This file is generated by jOOQ.
 */
package src.main.java.com.jnutz.jooq.public_.tables.records;


import java.sql.Date;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;

import src.main.java.com.jnutz.jooq.public_.tables.Users;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends TableRecordImpl<UsersRecord> implements Record6<Long, String, String, Byte, Date, String> {

    private static final long serialVersionUID = -1928440799;

    /**
     * Setter for <code>PUBLIC.Users.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.Users.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.Users.FirstName</code>.
     */
    public void setFirstname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.Users.FirstName</code>.
     */
    public String getFirstname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.Users.LastName</code>.
     */
    public void setLastname(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.Users.LastName</code>.
     */
    public String getLastname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>PUBLIC.Users.Age</code>.
     */
    public void setAge(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.Users.Age</code>.
     */
    public Byte getAge() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>PUBLIC.Users.DOB</code>.
     */
    public void setDob(Date value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.Users.DOB</code>.
     */
    public Date getDob() {
        return (Date) get(4);
    }

    /**
     * Setter for <code>PUBLIC.Users.Email</code>.
     */
    public void setEmail(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>PUBLIC.Users.Email</code>.
     */
    public String getEmail() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, String, Byte, Date, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, String, String, Byte, Date, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Users.USERS.ID;
    }

    @Override
    public Field<String> field2() {
        return Users.USERS.FIRSTNAME;
    }

    @Override
    public Field<String> field3() {
        return Users.USERS.LASTNAME;
    }

    @Override
    public Field<Byte> field4() {
        return Users.USERS.AGE;
    }

    @Override
    public Field<Date> field5() {
        return Users.USERS.DOB;
    }

    @Override
    public Field<String> field6() {
        return Users.USERS.EMAIL;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getFirstname();
    }

    @Override
    public String component3() {
        return getLastname();
    }

    @Override
    public Byte component4() {
        return getAge();
    }

    @Override
    public Date component5() {
        return getDob();
    }

    @Override
    public String component6() {
        return getEmail();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getFirstname();
    }

    @Override
    public String value3() {
        return getLastname();
    }

    @Override
    public Byte value4() {
        return getAge();
    }

    @Override
    public Date value5() {
        return getDob();
    }

    @Override
    public String value6() {
        return getEmail();
    }

    @Override
    public UsersRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UsersRecord value2(String value) {
        setFirstname(value);
        return this;
    }

    @Override
    public UsersRecord value3(String value) {
        setLastname(value);
        return this;
    }

    @Override
    public UsersRecord value4(Byte value) {
        setAge(value);
        return this;
    }

    @Override
    public UsersRecord value5(Date value) {
        setDob(value);
        return this;
    }

    @Override
    public UsersRecord value6(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UsersRecord values(Long value1, String value2, String value3, Byte value4, Date value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(Long id, String firstname, String lastname, Byte age, Date dob, String email) {
        super(Users.USERS);

        set(0, id);
        set(1, firstname);
        set(2, lastname);
        set(3, age);
        set(4, dob);
        set(5, email);
    }
}
